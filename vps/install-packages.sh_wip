#!/bin/bash

# 
# Always run this script with 'root' permissions
#
# References:
# - https://codereview.stackexchange.com/questions/146896/simple-linux-upgrade-script-in-bash

set -eu



echo

echo "*** Update the system ***"

echo

echo "1. Update apt cache"
apt update

echo

echo "2. Upgrade packages"
apt upgrade -y

echo

echo "3. Remove unused packages"
apt --purge autoremove

echo

echo "4. Clean up"
apt autoclean

echo



echo "*** Set up Firewall ***"

echo "1. Install firewall"  
apt install ufw

echo

echo "2. Allow SSH connections"
ufw allow OpenSSH

echo

echo "3. Enable firewall"
# "--force" to omit the prompt
ufw --force enable

echo



echo "*** Install Docker ***"
# https://docs.docker.com/engine/install/ubuntu/#installation-methods
# https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-20-04

echo "1. Set up the repository"

echo "1.1 Install packages to allow apt to use a repository over HTTPS"
apt install apt-transport-https ca-certificates curl software-properties-common -y

echo

echo "1.2 Add Dockerâ€™s official GPG key" 
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

echo

echo "1.3 Set up the stable repository"
add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"

# Make sure you are about to install from the Docker repo instead of the default Ubuntu repo:
apt-cache policy docker-ce


echo

echo "2. Install Docker Engine"

echo "2.1 Install the latest version of Docker Engine and containerd"
apt install docker-ce -y

echo 

echo "2.2 Verify that Docker Engine is installed correctly by running the hello-world image"
# This command downloads a test image and runs it in a container. When the container runs, it prints a message and exits.
# docker run hello-world
systemctl status docker

echo

echo "3. Start Docker on boot"

systemctl enable docker.service
systemctl enable containerd.service

echo "*** Manage Docker as a non-root user ***"
# https://docs.docker.com/engine/install/linux-postinstall/

# Add your user to the docker group
# $USER should be your current non-root (!) username
usermod \
  --append \
  --groups docker $USER

# Activate the changes to groups (only Linux)
newgrp docker

# Verify that you can run docker commands without sudo
docker run hello-world

# Clean up
docker rm $(docker ps -a -q) -f
docker image rm -f hello-world:latest



echo "***Install Docker Compose ***" 

echo "1. Download the current stable release of Docker Compose"
curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

echo

echo "2. Apply executable permissions to the binary"
chmod +x /usr/local/bin/docker-compose

# If you want you can also install Docker commands completion https://docs.docker.com/compose/completion/

echo

echo "Test the installation"
docker-compose --version


# + Turn off password authorization for SSH (or use some crazy one for emergency purposes) and switch to key-based authentication.
# + Turn on a firewall.

# Do not leave default ports for new applications e.g. databases, chats, application servers e.t.c.

# Turn off your webserver error info, version, default page, and similar options.


# Also Write bash script for
# - renewing SSL certificates
# - clearing some old backup files or cache
